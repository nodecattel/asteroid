# Astroid Trading Bot - Environment Configuration

# Application Port
PORT=5000

# Session Secret (generate with: openssl rand -hex 32)
SESSION_SECRET=your-session-secret-here

# Bot Password Authentication (REQUIRED)
# This password protects access to the dashboard and all bot management features
# Choose a strong password to prevent unauthorized access
BOT_PASSWORD=your-secure-password-here

# Aster Dex API Credentials (REQUIRED - All bots use these credentials for security)
# Get your API keys from: https://www.asterdex.com/en/api-management
# - Each account can create up to 30 API keys
# - Enable permissions for futures trading when creating the API key
# - Do not disclose your API Key to anyone to avoid asset losses
ASTERDEX_API_KEY=your-api-key-here
ASTERDEX_API_SECRET=your-api-secret-here

# AI Model Provider API Keys (OPTIONAL - For AI Trading Agents)
# Configure API keys for the AI models you want to use
# Get your API keys from the respective providers:
# - Anthropic (Claude): https://console.anthropic.com/
# - OpenAI (GPT-4): https://platform.openai.com/api-keys
# - DeepSeek: https://platform.deepseek.com/
# - xAI (Grok): https://x.ai/
# - Alibaba (Qwen): https://dashscope.aliyun.com/
# Note: Only agents with configured API keys will be available for creation
ANTHROPIC_API_KEY=
OPENAI_API_KEY=
DEEPSEEK_API_KEY=
XAI_API_KEY=
QWEN_API_KEY=

# MCP Server Configuration (OPTIONAL - For AI Agent Integration)
# Port for the Model Context Protocol HTTP server
# This allows AI agents to execute trades via the MCP protocol
MCP_PORT=3001

# Database Configuration (optional - uses in-memory storage if not set)
# For PostgreSQL: postgresql://user:password@localhost:5432/asterdex
# DATABASE_URL=

# PostgreSQL Configuration (only used if using PostgreSQL via Docker Compose)
POSTGRES_PASSWORD=your-postgres-password-here
POSTGRES_PORT=5432
